<templateSet group="React">
  <template name="json" value="&lt;pre&gt;{JSON.stringify($name$, null, 2)}&lt;/pre&gt;" description="Simple json log with pre-tag" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Bash" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PHP" value="false" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="Twig" value="false" />
      <option name="TypeScript" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="useState" value="const [ $NAME$, set$CAP_NAME$ ] = useState($DEFAULT$);" description="Quick way to initiate useState" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CAP_NAME" expression="" defaultValue="capitalize(NAME)" alwaysStopAt="false" />
    <variable name="DEFAULT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="useEff" value="useEffect(() =&gt; {&#10;    $CODE$&#10;}, [ $LISTEN$ ]);" description="Make an effect with listener" toReformat="false" toShortenFQNames="true">
    <variable name="LISTEN" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CODE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="jsrfc" value="&#10;import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;function $1$(props) {&#10;  return (&#10;    &lt;React.Fragment&gt;&#10;    &#10;    &lt;/React.Fragment&gt;&#10;  );&#10;}&#10;&#10;// We require the use of src and alt, only enforced by react in dev mode&#10;$1$.propTypes = {&#10;  &#10;};&#10;&#10;export default $1$;" description="React Function Component with PropTypes" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>